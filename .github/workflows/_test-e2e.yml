name: Test e2e

on:
  workflow_call:
    inputs:
      APP_URL:
        type: string
        required: true
    outputs:
      report_url:
        description: "Url to the uploaded html report"
        value: ${{ jobs.collect-report.outputs.report_url }}
    secrets:
      CLOUDFLARE_ACCOUNT_ID:
      CLOUDFLARE_PUBLISH_TOKEN:

jobs:
  e2e:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # browser: [chromium, firefox, webkit]
        browser: [chromium]
        shardIndex: [1]
    env:
      shardTotal: 1
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - run: bun install --frozen-lockfile

      - run: echo version=`bunx playwright --version | cut -d" " -f2` >> "$GITHUB_OUTPUT"
        id: playwright-version

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}-${{ matrix.browser }}

      - run: bunx playwright install ${{ matrix.browser }} --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: packages/e2e

      - run: |
          bunx playwright test \
            --project ${{ matrix.browser }} \
            --shard ${{ matrix.shardIndex }}/${{ env.shardTotal }} \
            --reporter github,blob \
            --forbid-only \
            --workers 1
        working-directory: packages/e2e
        env:
          APP_URL: ${{ inputs.APP_URL }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-blob-report-${{ matrix.browser }}-${{ matrix.shardIndex }}
          path: packages/e2e/blob-report
          retention-days: 1

  collect-report:
    runs-on: ubuntu-latest
    needs: [e2e]
    if: failure()
    outputs:
      report_url: ${{ steps.report-upload.outputs.url }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: blob-report
          pattern: e2e-blob-report-*
          merge-multiple: true

      - uses: oven-sh/setup-bun@v1

      - run: bunx playwright merge-reports --reporter html blob-report

      - name: upload html report
        id: report-upload
        run: |
          bunx wrangler pages deploy playwright-report --project-name=timezone-rocks --branch=test-report | tee deploy_log.txt
          URL=`cat deploy_log.txt | grep -Eo "https://[^ ]*"`
          echo url=$URL >> "$GITHUB_OUTPUT"
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_PUBLISH_TOKEN }}
